extends ./template/layout.jade

block content
	#statusPanel
		#nameWrap
			span.fa.fa-file-text
			span#name ...
		
		#peerWrap
			span.fa.fa-child
			span#peer ...

		#gitUrlWrap
			span.fa.fa-globe
			span#giturl(style="font-size:11px; margin-left:10px;") -
	
	h1 Chaincode Investigator
	
	br
	
	p(style="font-size:13px;").hint This is a tool to help debug/examine running chaincode. 
	p(style="font-size:13px;").hint First load the chaincode summary you want, next selet a peer to hit, finally invoke your chaincode functions! 
		
		
	// ---------------- Loading Panel ----------------- //
	.tool.toolClosed(show="loadPanel")#loadPanelNav
		span.fa.fa-wrench
		.toollegend.toollegendClosed Load
		.stepNumberClosed 1.
		
	#loadPanel.subPanel
		span#chaincodes
		button(type="button").loadButton#loadText Load Summary<br/>from Text
		//button(type="button").loadButton#loadFile Load Summary<br/>from File
		button(type="button").loadButton#loadManual Create Summary 
		
		#chaincodeDetailsWrap(hidden)
			br
			br
			span Chaincode Summary File from Text:&nbsp;
			span.hint (you can also click prev chaincode above to edit its details here)
			button(type="button" style="margin-bottom:5px;")#loadjson Load JSON
			br
			br
			textarea#jsonarea(autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false") {}
				
				
		#sdkInputWrap(hidden)
			br
			br
			span SDK Options:&nbsp;
			span.hint (you can also click prev chaincode above to copy its details here)
			button(type="button" style="margin-bottom:5px;")#sendjson Send to SDK
			br
			br
			textarea#sdkJsonArea(autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false") {}
	
	
	// ---------------- Network Panel ----------------- //	
	.tool.toolClosed.accent(show='networkPanel')
		span.fa.fa-gears
		.toollegend.toollegendClosed Network
		.stepNumberClosed 2.
		
	#networkPanel.subPanel.ready
		p
			span.legend Peer:
			select(name="peer" style="margin-left:0;")#peers
			span.hint select a peer on the blockchain
		
		p
			span.legend User:
			select(name="membershipUser" style="margin-left:0;")#users
			span.hint select a membership user for peer above
	
	
	// ---------------- Chaincode Panel ----------------- //
	.tool.toolClosed(show='chaincodePanel')#chaincodePanelNav
		span.fa.fa-terminal
		.toollegend.toollegendClosed Chaincode
		.stepNumberClosed 3.

	#chaincodePanel.subPanel.ready
		
		form#ccWrap
			.func 
				span `Read (
				input(type="text" name="read_name" placeholder="var name")
				span ); 
				span.hint aka Query(["abc"])
				button(type="button")#read 
					span Run
					span.fa.fa-fire
				button(type="button" style="margin-right:10px;")#readall
					span Run All
					span.fa.fa-th
					
			.func 
				span Query ([
				input(type="text" name="query_name" placeholder="array of strings")
				span ]); 
				button(type="button")#query 
					span Run
					span.fa.fa-fire
				button(type="button" style="margin-right:10px;")#queryall
					span Run All
					span.fa.fa-th
			
			.func#writeWrap
				span `Write (
				input(type="text" name="write_name" placeholder="var name")
				input(type="text" name="write_val" placeholder="value")
				span ); 
				button(type="button")#write
					span Run
					span.fa.fa-fire
			
			.func 
				span Invoke
				input(type="text" name="func_name" placeholder="func name")
				span ([
				input(type="text" name="func_val" placeholder="array of strings")
				span ]); 
				button(type="button")#barebones
					span Run
					span.fa.fa-fire
			
			

			#customgowrap
		
					
					
	// ---------------- Log Panel ----------------- //
	.tool.toolOpen.accent(show='logPanel')#logPanelNav
		span.fa.fa-file-text
		.toollegend.toollegendOpen Logs
		.stepNumberOpen 4.
		
	#logPanel.subPanel.ready
		textarea(disabled="disabled")#logs [logs here]
