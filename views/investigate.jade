extends ./template/layout.jade

block content
	//--------- Status Panel Thing at top -----------/
	#statusPanel
		#nameWrap
			span.fa.fa-file-text
			span#name ...
		
		#peerWrap
			span.fa.fa-child
			span#peer ...

		#gitUrlWrap
			span.fa.fa-globe
			span#giturl(style="font-size:11px; margin-left:10px;") -
	
	
	//------------------ Title ----------------//
	h1 Chaincode Investigator
	
	br
	
	p(style="font-size:13px;").hint This is a tool to help debug/examine running chaincode. 
	p(style="font-size:13px;").hint First load the chaincode summary you want, next selet a peer to hit, finally invoke your chaincode functions! 
		
		
	// ---------------- Loading Panel ----------------- //
	.tool.toolClosed(show="loadPanel")#loadPanelNav
		span.fa.fa-wrench
		.toollegend.toollegendClosed Load
		.stepNumberClosed 1.
		
	#loadPanel.subPanel
		span#chaincodes
		button(type="button").loadButton#showCreateTextarea Create Chaincode<br/>JSON Summary 
		
		#sdkLoading
			.loadingdiv
				span
				span
				span
				span
				span
				div 
			.hint(style="vertical-align:bottom; display:inline-block; margin-bottom:20px; margin-left:8px;") may take up to 1 minute
				
		#sdkInputWrap(hidden)
			br
			
			p(style="text-align:center;")
				span Fill Out SDK Options Below&nbsp;
				br
				span.hint (you can also click prev chaincode above to copy its details here)
				
			p
			
				span Deploy Function
				input(type="text" placeholder="function name" name="deploy_function")
				span ([
				input(type="text" placeholder="array of strings" name="deploy_arg")
				span ]);&nbsp;&nbsp;&nbsp;&nbsp;
				
				button(type="button" style="margin-bottom:5px;")#sendjson Send to SDK
			br
			textarea#sdkJsonArea(autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false") {}
			
	
	// ---------------- Network Panel ----------------- //	
	.tool.toolClosed.accent(show='networkPanel')
		span.fa.fa-gears
		.toollegend.toollegendClosed Network
		.stepNumberClosed 2.
		
	#networkPanel.subPanel.ready
		p
			span.legend Peer:
			select(name="peer" style="margin-left:0;")#peers
			span.hint select a peer on the blockchain
		
		p
			span.legend User:
			select(name="membershipUser" style="margin-left:0;")#users
			span.hint select a membership user
	
	
	// ---------------- Record Test Panel ----------------- //
	.tool.toolClosed.accent(show='testPanel')#testPanelNav
		span.fa.fa-youtube-play
		.toollegend.toollegendClosed Tests
		.stepNumberClosed *
		
	#testPanel.subPanel.ready
		span#testsList
		button(type="button").loadButton#recordButton 
			span#recordText Record New Test
			span#recordNumber

	
	// ---------------- Chaincode Panel ----------------- //
	.tool.toolClosed(show='chaincodePanel')#chaincodePanelNav
		span.fa.fa-terminal
		.toollegend.toollegendClosed Chaincode
		.stepNumberClosed 3.

	#chaincodePanel.subPanel.ready
		form#ccWrap
			.func 
				span Query ([
				input(type="text" name="query_name" placeholder="array of strings")
				span ]); 
				button(type="button")#query 
					span Run&nbsp;
					span.fa.fa-arrow-right
				button(type="button" style="margin-right:10px;")#queryall
					span Run All&nbsp;
					span.fa.fa-random
			
			.func 
				span Invoke
				input(type="text" name="func_name" placeholder="func name")
				span ([
				input(type="text" name="func_val" placeholder="array of strings")
				span ]); 
				button(type="button")#barebones
					span Run&nbsp;
					span.fa.fa-arrow-right

			#customgowrap
	
	
	// ---------------- Log Panel ----------------- //
	.tool.toolOpen.accent(show='logPanel')#logPanelNav
		span.fa.fa-file-text
		.toollegend.toollegendOpen Logs
		.stepNumberOpen 4.
		
	#logPanel.subPanel.ready
		pre#logs [logs here]
		span.fa.fa-remove#clearLogs(title="aaaaaaaaaahhhhhhhhhhhhhhhhhhh")
